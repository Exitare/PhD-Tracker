"""Initial migration

Revision ID: bd98b382b35c
Revises: 
Create Date: 2025-07-12 11:52:01.327567

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bd98b382b35c'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stripe_customer_id', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=150), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=False),
    sa.Column('email_verified_at', sa.BigInteger(), nullable=True),
    sa.Column('first_name', sa.String(length=150), nullable=True),
    sa.Column('last_name', sa.String(length=150), nullable=True),
    sa.Column('last_sign_in', sa.BigInteger(), nullable=False),
    sa.Column('organization_name', sa.String(length=150), nullable=True),
    sa.Column('managed_by', sa.Integer(), nullable=True),
    sa.Column('managed_by_stripe_id', sa.String(length=100), nullable=True),
    sa.Column('pending_email', sa.String(length=150), nullable=True),
    sa.Column('password_hash', sa.String(length=200), nullable=False),
    sa.Column('created_at', sa.BigInteger(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('deactivated_at', sa.BigInteger(), nullable=True),
    sa.Column('plan', sa.String(length=50), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(length=100), nullable=True),
    sa.Column('stripe_subscription_item_ids', sa.String(length=100), nullable=True),
    sa.Column('stripe_subscription_expires_at', sa.BigInteger(), nullable=True),
    sa.Column('stripe_subscription_canceled', sa.Boolean(), nullable=False),
    sa.Column('role', sa.Enum('user', 'manager', 'admin', name='user_role'), nullable=False),
    sa.Column('access_code', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['managed_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('stripe_customer_id')
    )
    op.create_table('projects',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('type', sa.Enum('paper', 'poster', 'dissertation', name='project_type'), nullable=False),
    sa.Column('selected_venue', sa.String(length=255), nullable=True),
    sa.Column('selected_venue_url', sa.String(length=255), nullable=True),
    sa.Column('journal_recommendations', sa.JSON(), nullable=True),
    sa.Column('venue_requirements', sa.Text(), nullable=True),
    sa.Column('created_at', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usage_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('event_name', sa.String(length=100), nullable=False),
    sa.Column('used_tokens', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sub_projects',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('revision', 'normal', name='subproject_type'), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('reviewer_comments', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('created_at', sa.BigInteger(), nullable=False),
    sa.Column('deadline', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('milestones',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sub_project_id', sa.Integer(), nullable=False),
    sa.Column('milestone', sa.Text(), nullable=False),
    sa.Column('due_date', sa.String(length=10), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['sub_project_id'], ['sub_projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('milestones')
    op.drop_table('sub_projects')
    op.drop_table('usage_logs')
    op.drop_table('projects')
    op.drop_table('users')
    # ### end Alembic commands ###
